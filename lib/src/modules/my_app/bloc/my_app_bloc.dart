import 'package:equatable/equatable.dart';import 'package:flutter_bloc/flutter_bloc.dart';import 'package:get_it/get_it.dart';import 'package:virusscanapp/src/data/repositories/local/language_app_repo.dart';part 'my_app_event.dart';part 'my_app_state.dart';class MyAppBloc extends Bloc<MyAppEvent, MyAppState> {  LanguageAppRepository languageAppRepository =      GetIt.I.get<LanguageAppRepository>();  MyAppBloc() : super(MyAppInitial()) {    on<MyAppGetDefaultLanguage>(_getDefaultLanguage);    on<MyAppUpdateLanguage>(_updateLanguage);    add(MyAppGetDefaultLanguage());  }  Future<void> _updateLanguage(      MyAppUpdateLanguage event, Emitter<MyAppState> emit) async {    try {      String languageCode = await languageAppRepository.updateLanguage();      emit(MyAppUpdateLanguageSuccess(languageCode: languageCode));    } catch (e) {      emit(MyAppError(message: e.toString()));    }  }  Future<void> _getDefaultLanguage(    MyAppGetDefaultLanguage event,    Emitter<MyAppState> emit,  ) async {    try {      String languageCode = await languageAppRepository.getDefaultLanguage();      emit(MyAppGetDefaultLanguageSuccess(languageCode: languageCode));    } catch (e) {      emit(MyAppError(message: e.toString()));    }  }}